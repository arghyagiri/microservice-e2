{
	"info": {
		"_postman_id": "20cd553e-b648-4563-bfeb-863b1e5405c5",
		"name": "E-Commerce-Aggregation-Pattern-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30165012"
	},
	"item": [
		{
			"name": "Create a Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if customer created.\", function () {\r",
							"        pm.collectionVariables.set(\"customerId\",jsonData.customerId);\r",
							"        pm.expect(jsonData.customerId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"emailAddress\": \"{{$randomEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/customers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if product created.\", function () {\r",
							"        pm.collectionVariables.set(\"productId\",jsonData.productId);\r",
							"        pm.expect(jsonData.productId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"rating\",_.random(1.0, 5.0));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"productDescription\": \"{{$randomProductName}}\",\r\n  \"seller\": \"{{$randomProduct}}\",\r\n  \"reviewRating\": {{rating}},\r\n  \"price\": {{$randomPrice}},\r\n  \"createDate\": \"2023-10-04\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if order created.\", function () {\r",
							"        pm.collectionVariables.set(\"orderId\",jsonData.orderId);\r",
							"        pm.expect(jsonData.orderId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerId\": {{customerId}},\r\n  \"productIds\": [\r\n    {{productId}}\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Aggregated data by Order Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if aggregated data found.\", function () {\r",
							"        pm.expect(jsonData.orderId).not.eql(undefined);\r",
							"        pm.expect(jsonData.customer.customerId).not.eql(undefined);\r",
							"        pm.expect(jsonData.products[0].productId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/agg-service/order/{{orderId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"agg-service",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Aggregated data for customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if aggregated data found.\", function () {\r",
							"        pm.expect(jsonData.customer.customerId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/agg-service/customer-orders/{{customerId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"agg-service",
						"customer-orders",
						"{{customerId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8090",
			"type": "string"
		},
		{
			"key": "customerId",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "rating",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		}
	]
}