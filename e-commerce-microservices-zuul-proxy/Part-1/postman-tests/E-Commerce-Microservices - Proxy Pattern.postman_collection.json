{
	"info": {
		"_postman_id": "c8b4ec5a-690e-43aa-ba87-bed7d5b62c60",
		"name": "E-Commerce-Microservices - Proxy Pattern",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30165012"
	},
	"item": [
		{
			"name": "Create a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if product created.\", function () {\r",
							"        pm.collectionVariables.set(\"productId\",jsonData.productId);\r",
							"        pm.expect(jsonData.productId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"rating\",_.random(1.0, 5.0));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"productDescription\": \"{{$randomProductName}}\",\r\n  \"seller\": \"{{$randomProduct}}\",\r\n  \"reviewRating\": {{rating}},\r\n  \"price\": {{$randomPrice}},\r\n  \"createDate\": \"2023-10-04\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{productServiceUrl}}/products",
					"host": [
						"{{productServiceUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if product created.\", function () {\r",
							"        pm.collectionVariables.set(\"productId\",jsonData.productId);\r",
							"        pm.expect(jsonData.productId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"rating\",_.random(1.0, 5.0));"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{productServiceUrl}}/products/{{productId}}",
					"host": [
						"{{productServiceUrl}}"
					],
					"path": [
						"products",
						"{{productId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Inventory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if order created.\", function () {\r",
							"        pm.collectionVariables.set(\"postCode\",jsonData.postCode);\r",
							"        pm.expect(jsonData.postCode).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"quantityAvailable\": {{$randomInt}},\r\n  \"minimumStockLevel\": {{$randomInt}},\r\n  \"maximumStockLevel\": {{$randomInt}},\r\n  \"reorderPoint\": {{$randomInt}},\r\n  \"productId\": {{productId}},\r\n  \"postCode\": \"{{$randomCountryCode}}{{$randomInt}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{inventoryServiceUrl}}/inventory",
					"host": [
						"{{inventoryServiceUrl}}"
					],
					"path": [
						"inventory"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"    pm.test(\"Check if order created.\", function () {\r",
							"        pm.expect(jsonData.products[0].productId).not.eql(undefined);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"rating\",_.random(1.0, 5.0));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"postCode\": \"{{postCode}}\",\r\n  \"products\": [\r\n    {\r\n      \"productId\": {{productId}},\r\n      \"quantity\": 4\r\n    },\r\n{\r\n      \"productId\": {{productId}},\r\n      \"quantity\": 4\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{orderServiceUrl}}/orders",
					"host": [
						"{{orderServiceUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "productServiceUrl",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "orderServiceUrl",
			"value": "http://localhost:8083"
		},
		{
			"key": "inventoryServiceUrl",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "rating",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "warehouseId",
			"value": ""
		},
		{
			"key": "postCode",
			"value": ""
		}
	]
}