spring:
  application:
    name: api-gateway-service
  redis:
    host: localhost
    port: 6379
  jackson:
    default-property-inclusion: non_empty
  ssl:
    bundle:
      pem:
        client:
          truststore:
            certificate: "classpath:apilayer.net.crt"
  cloud:
    #discovery:
      #reactive:
        #enabled: false
    gateway:
      httpclient:
        connect-timeout: 1000
        response-timeout: 5s
      routes:
        - id: account-management-service
          uri: http://localhost:8081
          predicates:
            - Path=/accounts/**
        - id: audit-service
          uri: http://localhost:8082
          predicates:
            - Path=/audits/**
          filters:
            #- StripPrefix=1
          - name: RequestRateLimiter
            args:
              key-resolver: "#{@userKeyResolver}"
              redis-rate-limiter.replenishRate: 1
              redis-rate-limiter.burstCapacity: 1
              redis-rate-limiter.requestedTokens: 1
        - id: fraud-detection-service
          uri: http://localhost:8083
          predicates:
            - Path=/frauds/**
        - id: notification-service
          uri: http://localhost:8084
          predicates:
            - Path=/notifications/**
        - id: transaction-service
          uri: http://localhost:8085
          predicates:
            - Path=/transactions/**
        - id: currency-exchange-service
          uri: https://data.fixer.io/api/latest
          predicates:
            - Path=/forex-rates/**
        - id: audit-service
          uri: http://localhost:8082
          predicates:
            - Path=/audits/**
server:
  port: 8090

management:
  health:
    redis:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"


logging:
  level:
    reactor:
      netty: INFO
    org:
      springframework:
        cloud:
          gateway: TRACE